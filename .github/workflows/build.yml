name: Minecraft Mod CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # 允许手动触发

env:
  ACTIONS_ALLOW_DEPRECATED: false  # 强制禁用废弃API
  GRADLE_OPTS: -Dorg.gradle.daemon=false  # 防止Gradle守护进程冲突

jobs:
  build:
    permissions:
      contents: read
      actions: write  # 用于重试功能
      packages: write  # 如需发布到GitHub Packages

    runs-on: ubuntu-22.04  # 指定新版OS
    timeout-minutes: 45

    strategy:
      matrix:
        java: [17]  # Minecraft 1.21要求
        # 可扩展多版本测试：
        # java: [17, 21]
        # os: [ubuntu-22.04, windows-latest]

    steps:
      # ========== 初始化阶段 ==========
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整git历史

      # ========== 环境配置 ==========
      - name: Validate Workflow
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs')
            if (!fs.existsSync('gradlew')) {
              core.setFailed('Missing gradlew file! Run gradle wrapper first')
            }

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'gradle'  # 自动缓存依赖

      # ========== 构建阶段 ==========
      - name: Grant gradlew permission
        run: chmod +x gradlew

      - name: Build with Gradle (智能重试)
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 15
          command: ./gradlew build --stacktrace --no-daemon

      # ========== 测试报告 ==========
      - name: Upload Test Results
        if: always()  # 即使构建失败也上传
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ github.run_number }}
          path: |
            build/test-results/**/*
            build/reports/**/*

      # ========== 产物处理 ==========
      - name: Upload Mod Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: mod-${{ github.run_number }}
          path: build/libs/*.jar
          retention-days: 7  # 自动清理旧构建

      # ========== 自动发布 ========== (可选)
      - name: Create GitHub Release
        if: success() && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*.jar
          generate_release_notes: true
